#pragma once

#include "bx.h"
#include "StaticAssert.h"

char *FighterRelStrings[MAX_CHARS];
char *FighterResourceStrings[MAX_CHARS];
char *KirbyCopyResourceStrings[MAX_CHARS];
char *FighterInternalNames[MAX_CHARS];

char FighterLoadFlags[] = {
    0x16, 0x13, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x12, 0x17, 0x17, 0x07,
    0x13, 0x17, 0x17, 0x1E, 0x1C, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x16,
    0x17, 0x1F, 0x17, 0x17, 0x17, 0x15, 0x15, 0x15, 0x13, 0x17, 0x17, 0x17,
    0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17,
    0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x17, 0x15, 0x15, 0x15, 0x15, 0x15,
    0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15,
    0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15,
    0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15,
    0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15,
    0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15,
    0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15};

short KirbyResourceFlags[] = {
    02, 01, 02, 02, 02, 00, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02,
    00, 02, 02, 01, 02, 02, 02, 02, 02, 01, 02, 02, 00, 02, 02, 02,
    02, 02, 02, 02, 00, 01, 00, 00, 00, 02, 00, 00, 02, 00, 01, 02,
    02, 02, 00, 00, 00, 00, 02, 00, 00, 00, 00, 00, 00, 00, 00, 00,
    00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
    00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
    00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
    00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00};

char EntryResourceFlags[] = {
    01, 01, 00, 01, 00, 01, 01, 01, 01, 01, 00, 00, 02, 00, 00, 01,
    00, 00, 01, 01, 00, 01, 01, 00, 00, 01, 01, 01, 00, 00, 00, 00,
    01, 00, 00, 00, 00, 01, 00, 00, 00, 00, 00, 00, 01, 00, 01, 00,
    00, 00, 00, 00, 00, 00, 01, 00, 00, 00, 00, 00, 00, 00, 00, 00,
    00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
    00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
    00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
    00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00};

char ResultResourceFlags[] = {
    00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
    00, 00, 00, 00, 00, 01, 01, 00, 00, 01, 01, 01, 00, 00, 00, 00,
    01, 00, 00, 00, 00, 00, 00, 00, 00, 01, 00, 00, 00, 00, 01, 01,
    00, 01, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
    00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
    00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
    00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
    00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00};

short FighterColorFlags[] = {
    0x107D, 0x103F, 0x107B, 0x303F, 0x107B, 0x103F, 0x103F, 0x100F,
    0x107F, 0x103F, 0x107D, 0x307B, 0x303F, 0x103F, 0x103F, 0x103F,
    0x103F, 0x103F, 0x1002, 0x103F, 0x103F, 0x1FFF, 0x103F, 0x103F,
    0x103F, 0x103F, 0x103F, 0x307D, 0x101F, 0x101F, 0x101F, 0x101F,
    0x107D, 0x1077, 0x103F, 0x107D, 0x0000, 0x101F, 0x0000, 0x0000,
    0x0000, 0x107B, 0x0000, 0x0000, 0x103F, 0x0000, 0x103F, 0x1037,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF,
    0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF,
    0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF,
    0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF,
    0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF,
    0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF,
    0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF,
    0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF,
    0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF, 0x1FFF};

int EntryArticleFlags[] = {
    0x00000004, 0x00000002, 0xFFFFFFFF, 0x00000008, 0xFFFFFFFF, 0x0000000C,
    0x00000004, 0x00000004, 0x00000002, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF,
    0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000005, 0xFFFFFFFF, 0xFFFFFFFF,
    0x00000007, 0x00000004, 0xFFFFFFFF, 0x00000000, 0x00000000, 0xFFFFFFFF,
    0xFFFFFFFF, 0x00000001, 0x00000005, 0x00000004, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0x00000005, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0x00000004, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0x00000004, 0xFFFFFFFF, 0x00000010, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0x00000004, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF};

int FighterSoundbanks[] = {
    0x00000001, 0x00000006, 0x00000002, 0x00000007, 0x00000008, 0x00000009,
    0x0000000A, 0x0000000B, 0x0000000C, 0x0000000D, 0x0000000E, 0x0000000F,
    0x00000010, 0x00000011, 0x00000011, 0x00000012, 0x00000012, 0x00000013,
    0x00000014, 0x00000015, 0x00000016, 0x00000017, 0x00000004, 0x00000003,
    0x00000007, 0x00000018, 0x00000019, 0x0000001A, 0x0000001B, 0x0000001C,
    0x0000001D, 0x0000001E, 0x00000005, 0x0000001F, 0x00000020, 0x00000021,
    0xFFFFFFFF, 0x00000022, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000023,
    0xFFFFFFFF, 0xFFFFFFFF, 0x00000024, 0xFFFFFFFF, 0x00000025, 0x00000026,
    0xFFFFFFFF, 0xFFFFFFFF, 0x00000028, 0x00000028, 0x00000028, 0x00000028,
    0x00000001, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF};

int KirbySoundbanks[] = {
    0x00000039, 0x0000002D, 0x00000035, 0x00000047, 0x0000004B, 0xFFFFFFFF,
    0x0000002F, 0x0000003E, 0x00000038, 0x0000002A, 0x0000003C, 0x00000034,
    0x0000003D, 0x00000044, 0x00000044, 0x00000032, 0x00000032, 0x0000003A,
    0x00000030, 0x0000002E, 0x00000031, 0x00000049, 0x0000003B, 0x00000040,
    0x00000047, 0x0000003F, 0x00000037, 0x0000002C, 0xFFFFFFFF, 0x00000041,
    0x00000041, 0x00000041, 0x0000002B, 0x00000036, 0x00000033, 0x00000043,
    0xFFFFFFFF, 0x00000042, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000048,
    0xFFFFFFFF, 0xFFFFFFFF, 0x0000004A, 0xFFFFFFFF, 0x00000045, 0x00000046,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0x00000039, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF};

ftSlotCharacterEntry ftSlotCharacters[] = {
    {0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000001, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000002, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000003, 0x00000018, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000018, 0x00000003, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000004, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000005, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000006, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000007, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000008, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000009, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000000A, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000000B, 0x00000030, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000000C, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000000D, 0x0000000E, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000000E, 0x0000000D, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000000F, 0x0000000F, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000000F, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000000F, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000011, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000012, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000013, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000014, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000015, 0x00000031, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000016, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000017, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000019, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000001A, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000001B, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000001D, 0x0000001E, 0x0000001F, 0x0000001C},
    {0x0000001D, 0x0000001E, 0x0000001F, 0xFFFFFFFF},
    {0x0000001E, 0x0000001F, 0x0000001D, 0x0000001C},
    {0x0000001E, 0x0000001F, 0x0000001D, 0xFFFFFFFF},
    {0x0000001F, 0x0000001D, 0x0000001E, 0x0000001C},
    {0x0000001F, 0x0000001D, 0x0000001E, 0xFFFFFFFF},
    {0x00000020, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000021, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000022, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000023, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000025, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000029, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000002C, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000002E, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000002F, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000030, 0x0000000B, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000031, 0x00000015, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000032, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000033, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000034, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000035, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000036, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000000, 0x00000000, 0x00000000, 0x00000000},
    {0x00000000, 0x00000000, 0x00000000, 0x00000000},
    {0x00000000, 0x00000000, 0x00000000, 0x00000000},
    {0x00000000, 0x00000000, 0x00000000, 0x00000000},
    {0x00000000, 0x00000000, 0x00000000, 0x00000000},
    {0x00000000, 0x00000000, 0x00000000, 0x00000000},
    {0x00000000, 0x00000000, 0x00000000, 0x00000000},
    {0x00000000, 0x00000000, 0x00000000, 0x00000000},
    {0x00000000, 0x00000000, 0x00000000, 0x00000000},
    {0x00000000, 0x00000000, 0x00000000, 0x00000000},
    {0x00000000, 0x00000000, 0x00000000, 0x00000000},
    {0x00000000, 0x00000000, 0x00000000, 0x00000000},
    {0x0000003F, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000040, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000041, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000042, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000043, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000044, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000045, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000046, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000047, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000048, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000049, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000004A, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000004B, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000004C, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000004D, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000004E, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000004F, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000050, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000051, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000052, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000053, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000054, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000055, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000056, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000057, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000058, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000059, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000005A, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000005B, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000005C, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000005D, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000005E, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000005F, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000060, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000061, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000062, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000063, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000064, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000065, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000066, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000067, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000068, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000069, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000006A, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000006B, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000006C, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000006D, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000006E, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000006F, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000070, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000071, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000072, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000073, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000074, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000075, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000076, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000077, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000078, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x00000079, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000007A, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000007B, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000007C, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000007D, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000007E, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},
    {0x0000007F, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF}};

static_assert(sizeof(FighterLoadFlags) == MAX_CHARS * 1, "FighterLoadFlags array wrong size!");
static_assert(sizeof(KirbyResourceFlags) == MAX_CHARS * 2, "KirbyResourceFlags array wrong size!");
static_assert(sizeof(EntryResourceFlags) == MAX_CHARS * 1, "EntryResourceFlags array wrong size!");
static_assert(sizeof(ResultResourceFlags) == MAX_CHARS * 1, "ResultResourceFlags array wrong size!");
static_assert(sizeof(FighterColorFlags) == MAX_CHARS * 2, "FighterColorFlags array wrong size!");
static_assert(sizeof(EntryArticleFlags) == MAX_CHARS * 4, "EntryArticleFlags array wrong size!");
static_assert(sizeof(FighterSoundbanks) == MAX_CHARS * 4, "FighterSoundbanks array wrong size!");
static_assert(sizeof(KirbySoundbanks) == MAX_CHARS * 4, "KirbySoundbanks array wrong size!");
static_assert(sizeof(ftSlotCharacters) == MAX_CHARS * 0x10, "ftSlotCharacters array wrong size!");